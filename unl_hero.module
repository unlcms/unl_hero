<?php

/**
 * Implements hook_form_FORM_ID_alter().
 */
function unl_hero_form_field_ui_field_overview_form_alter(&$form, &$form_state, $form_id) {
  $form['#after_build'][] = '_unl_hero_after_build';
}

function _unl_hero_after_build($form, &$form_state) {
  // Doesn't work to hide these fields on admin/structure/types/manage/%/fields
  //$groups_to_hide = array('group_unl_hero');
  //field_group_hide_field_groups($form, $groups_to_hide);

  // Only way found to hide/disable fields on this form so users can't modify them.
  if (array_key_exists('group_unl_hero', $form['fields'])) {
    $form['fields']['group_unl_hero']['#attributes']['class'][] = 'element-hidden';
    foreach ($form['fields'] as $key => $field) {
      if (substr( $key, 0, 15 ) === 'field_unl_hero_') {
        $form['fields'][$key]['#attributes']['class'][] = 'element-hidden';
      }
    }
  }

  return $form;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function unl_hero_form_field_ui_display_overview_form_alter(&$form, &$form_state, $form_id) {
  // Only way found to hide/disable fields on this form so users can't modify them.
  foreach ($form['fields'] as $key => $field) {
    if (substr( $key, 0, 15 ) === 'field_unl_hero_') {
      $form['fields'][$key]['#attributes']['class'][] = 'element-hidden';
    }
  }
}


/**
 * Implements hook_ctools_plugin_api().
 * This hook is needed to let ctools know about exportables.
 * If you create field groups by using hook_field_group_info, you
 * will need to include the ctools api hook as well.
 */
function unl_hero_ctools_plugin_api($module, $api) {
  if ($module == 'field_group' && $api == 'field_group') {
    return array('version' => 1);
  }
}

/**
 * Implements hook_field_group_info().
 */
function unl_hero_field_group_info() {
  $field_groups = array();

  foreach (node_type_get_types() as $node_machine_name => $node_type) {
   if (!in_array($node_machine_name, array('admission', 'major', 'mindset'))) {
    $identifier = "group_unl_hero|node|{$node_machine_name}|form";

    $field_group = new stdClass;
    $field_group->api_version = 1;
    $field_group->identifier = $identifier;
    $field_group->group_name = 'group_unl_hero';
    $field_group->entity_type = 'node';
    $field_group->bundle = $node_machine_name;
    $field_group->mode = 'form';
    $field_group->parent_name = '';
    $field_group->data = array(
      'label' => 'Hero',
      'weight' => '35', // Vertical tab weight = (-30 + this value)
      'children' => array(
        0 => 'field_unl_hero_size',
        1 => 'field_unl_hero_title',
        2 => 'field_unl_hero_subhead1',
        3 => 'field_unl_hero_subhead2',
        4 => 'field_unl_hero_image',
        5 => 'field_unl_hero_photo_credit',
      ),
      'format_type' => 'tab',
      'format_settings' => array(
        'formatter' => 'collapsible',
        'instance_settings' => array(
          'classes' => '',
          'required_fields' => 1,
        ),
      ),
    );
    $field_groups[$identifier] = $field_group;
   }
  }

  return $field_groups;
}

/**
 * Implements hook_node_type_insert().
 */
function unl_hero_node_type_insert($info) {
  if (!in_array($info->type, array('admission', 'major', 'mindset'))) {
    module_load_include('inc', 'unl_hero', 'unl_hero');
    _unl_hero_field_create_instances($info->type);
  }
}

/**
 * Implements hook_image_default_styles().
 */
function unl_hero_image_default_styles() {
  $styles = array();
  $styles['unl_hero_large'] = array(
    'label' => 'UNL Hero Large (1600)',
    'effects' => array(
      array(
        'name' => 'image_scale',
        'data' => array('width' => 1600, 'upscale' => 0),
        'weight' => 0,
      ),
    ),
  );
  return $styles;
}
